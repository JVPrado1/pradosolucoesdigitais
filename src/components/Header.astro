---
// Obter o idioma atual da URL
const currentPath = Astro.url.pathname;
const lang = currentPath.startsWith('/en') ? 'en' : 'pt';

// Função para alternar entre idiomas
function getAlternateLink() {
  // Remover o prefixo de idioma se existir
  let path = currentPath;
  if (path.startsWith('/en')) {
    path = path.substring(3) || '/';
  }
  
  // Adicionar prefixo do outro idioma
  return lang === 'pt' ? `/en${path}` : path;
}

const alternateLink = getAlternateLink();

// Traduções
const translations = {
  pt: {
    about: "Sobre",
    services: "Serviços",
    portfolio: "Portfólio",
    contact: "Contato",
    langSwitch: "EN"
  },
  en: {
    about: "About",
    services: "Services",
    portfolio: "Portfolio",
    contact: "Contact",
    langSwitch: "PT"
  }
};

const t = translations[lang];
---
// Header moderno com glassmorphismaaa
<header class="fixed w-full top-0 z-50 bg-background/80 backdrop-blur-sm border-b border-border transition-colors duration-300 ">
  <div class="max-w-6xl mx-auto px-6 lg:px-8">
    <div class="flex items-center justify-between h-[60px]">
      <!-- Logo (lado esquerdo) -->
      <a href="/" class="flex-shrink-0">
        <img id="site-logo" src="/logo-preto.png" alt="Prado Soluções Digitais" class="h-10 w-auto">
      </a>

      <!-- Navegação e Theme Toggle (lado direito) -->
      <div class="flex items-center space-x-4">
        <!-- Links de Navegação Desktop -->
        <nav class="hidden md:flex items-center">
          <ul class="flex items-center space-x-6">
            <li>
              <a href="#about" class="text-linkmenu hover:text-[#00B050] transition-colors duration-300">
                {t.about}
              </a>
            </li>
            <li>
              <a href="#services" class="text-linkmenu hover:text-[#00B050] transition-colors duration-300">
                {t.services}
              </a>
            </li>
            <li>
              <a href="#portfolio" class="text-linkmenu hover:text-[#00B050] transition-colors duration-300">
                {t.portfolio}
              </a>
            </li>
            <li>
              <a href="#contact" class="text-linkmenu hover:text-[#00B050] transition-colors duration-300">
                {t.contact}
              </a>
            </li>
          </ul>
        </nav>

   

        <!-- Theme Toggle Button -->
        <button id="theme-toggle" class="p-2 rounded-lg bg-card hover:bg-card-hover border border-border transition-all duration-300 cursor-pointer" title="Alternar tema">
          <svg id="sun-icon" class="w-5 h-5 text-muted-foreground hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"/>
          </svg>
          <svg id="moon-icon" class="w-5 h-5 text-muted-foreground" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"/>
          </svg>
        </button>
     <!-- Language Switcher (Desktop) -->
     <a href={alternateLink} class="hidden md:flex items-center justify-center w-10 h-7 rounded-md border border-border hover:bg-card-hover transition-all duration-300 overflow-hidden">
      {lang === 'pt' ? (
        <img src="/bandeiras/usa.svg" alt="Switch to English" class="w-full h-full object-cover" />
      ) : (
        <img src="/bandeiras/brazil.svg" alt="Mudar para Português" class="w-full h-full object-cover" />
      )}
    </a>

    <!-- Language Switcher (Mobile) -->
    <a href={alternateLink} class="md:hidden flex items-center justify-center w-10 h-7 rounded-md border border-border hover:bg-card-hover transition-all duration-300 overflow-hidden">
      {lang === 'pt' ? (
        <img src="/bandeiras/usa.svg" alt="Switch to English" class="w-full h-full object-cover" />
      ) : (
        <img src="/bandeiras/brazil.svg" alt="Mudar para Português" class="w-full h-full object-cover" />
      )}
    </a>
        <!-- Menu Mobile Button -->
        <button id="mobile-menu-button" class="md:hidden text-muted-foreground hover:text-foreground transition-colors duration-300 ml-2 z-50">
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path class="menu-icon" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"/>
            <path class="close-icon hidden" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
          </svg>
        </button>
      </div>
    </div>
  </div>

</header>

<!-- Menu Mobile Fullscreen -->
<div id="mobile-menu" class="fixed inset-0 h-screen bg-black/80 backdrop-blur-md z-40 flex flex-col items-center justify-center">
  <!-- Botão Fechar -->
  <button id="mobile-menu-close" class="absolute top-4 right-4 text-white hover:text-[#00B050] transition-colors duration-300">
    <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
    </svg>
  </button>

  <!-- Navegação -->
  <nav class="flex flex-col items-center space-y-8 text-center  ">
    <ul class="flex flex-col items-center space-y-8 text-center ">
      <li><a href="#hero" class="bg-red block text-2xl font-bold text-white hover:text-[#00B050] transition-colors duration-300">Início</a></li>
      <li><a href="#about" class="block text-2xl font-bold text-white hover:text-[#00B050] transition-colors duration-300">{t.about}</a></li>
      <li><a href="#services" class="block text-2xl font-bold text-white hover:text-[#00B050] transition-colors duration-300">{t.services}</a></li>
      <li><a href="#portfolio" class="block text-2xl font-bold text-white hover:text-[#00B050] transition-colors duration-300">{t.portfolio}</a></li>
      <li><a href="#contact" class="block text-2xl font-bold text-white hover:text-[#00B050] transition-colors duration-300">{t.contact}</a></li>
    </ul>
    
    <!-- Linha divisória verde -->
    <div class="w-24 h-0.5 bg-[#00B050] my-4"></div>
    
    <!-- Links redes sociais -->
    <div class="flex space-x-6 mt-8">
      <a href="https://instagram.com" target="_blank" class="text-white hover:text-[#00B050] transition-colors duration-300">
        <svg class="w-7 h-7" fill="currentColor" viewBox="0 0 24 24">
          <path d="M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zm0 5.838c-3.403 0-6.162 2.759-6.162 6.162s2.759 6.163 6.162 6.163 6.162-2.759 6.162-6.163c0-3.403-2.759-6.162-6.162-6.162zm0 10.162c-2.209 0-4-1.79-4-4 0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.21-1.791 4-4 4zm6.406-11.845c-.796 0-1.441.645-1.441 1.44s.645 1.44 1.441 1.44c.795 0 1.439-.645 1.439-1.44s-.644-1.44-1.439-1.44z"/>
        </svg>
      </a>
      <a href="https://wa.me/5500000000000" target="_blank" class="text-white hover:text-[#00B050] transition-colors duration-300">
        <svg class="w-7 h-7" fill="currentColor" viewBox="0 0 24 24">
          <path d="M.057 24l1.687-6.163c-1.041-1.804-1.588-3.849-1.587-5.946.003-6.556 5.338-11.891 11.893-11.891 3.181.001 6.167 1.24 8.413 3.488 2.245 2.248 3.481 5.236 3.48 8.414-.003 6.557-5.338 11.892-11.893 11.892-1.99-.001-3.951-.5-5.688-1.448l-6.305 1.654zm6.597-3.807c1.676.995 3.276 1.591 5.392 1.592 5.448 0 9.886-4.434 9.889-9.885.002-5.462-4.415-9.89-9.881-9.892-5.452 0-9.887 4.434-9.889 9.884-.001 2.225.651 3.891 1.746 5.634l-.999 3.648 3.742-.981zm11.387-5.464c-.074-.124-.272-.198-.57-.347-.297-.149-1.758-.868-2.031-.967-.272-.099-.47-.149-.669.149-.198.297-.768.967-.941 1.165-.173.198-.347.223-.644.074-.297-.149-1.255-.462-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.297-.347.446-.521.151-.172.2-.296.3-.495.099-.198.05-.372-.025-.521-.075-.148-.669-1.611-.916-2.206-.242-.579-.487-.501-.669-.51l-.57-.01c-.198 0-.52.074-.792.372s-1.04 1.016-1.04 2.479 1.065 2.876 1.213 3.074c.149.198 2.095 3.2 5.076 4.487.709.306 1.263.489 1.694.626.712.226 1.36.194 1.872.118.571-.085 1.758-.719 2.006-1.413.248-.695.248-1.29.173-1.414z"/>
        </svg>
      </a>
    </div>
  </nav>
</div>

<script is:inline>
  // Elementos do DOM
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenuClose = document.getElementById('mobile-menu-close');
  const mobileMenu = document.getElementById('mobile-menu');
  const menuIcon = document.querySelector('.menu-icon');
  const closeIcon = document.querySelector('.close-icon');
  const themeToggle = document.getElementById('theme-toggle');
  const sunIcon = document.getElementById('sun-icon');
  const moonIcon = document.getElementById('moon-icon');

  // Toggle do menu mobile
  function closeMobileMenu() {
    mobileMenu?.classList.remove('is-open');
    menuIcon?.classList.remove('hidden');
    closeIcon?.classList.add('hidden');
    document.body.style.overflow = '';
  }

  mobileMenuButton?.addEventListener('click', () => {
    const isOpen = mobileMenu.classList.toggle('is-open');
    menuIcon?.classList.toggle('hidden');
    closeIcon?.classList.toggle('hidden');
    document.body.style.overflow = isOpen ? 'hidden' : '';
  });
  
  // Fechar menu com o botão X
  mobileMenuClose?.addEventListener('click', closeMobileMenu);

  // Fecha o menu ao clicar em um link
  const mobileLinks = mobileMenu?.querySelectorAll('a');
  mobileLinks?.forEach(link => {
    link.addEventListener('click', closeMobileMenu);
  });

  // Theme toggle functionality
  function updateThemeIcons() {
    const currentTheme = document.documentElement.getAttribute('data-theme');
    const logoElement = document.getElementById('site-logo');
    
    if (currentTheme === 'light') {
      sunIcon?.classList.remove('hidden');
      moonIcon?.classList.add('hidden');
      // Atualiza logo para versão preta no tema claro
      if (logoElement) logoElement.src = '/logo-preto.png';
    } else {
      sunIcon?.classList.add('hidden');
      moonIcon?.classList.remove('hidden');
      // Atualiza logo para versão branca no tema escuro
      if (logoElement) logoElement.src = '/logo.png';
    }
    
    console.log('Tema atual:', currentTheme, 'Logo atualizada');
  }

  function toggleTheme() {
    const currentTheme = document.documentElement.getAttribute('data-theme');
    const newTheme = currentTheme === 'light' ? 'dark' : 'light';
    
    document.documentElement.setAttribute('data-theme', newTheme);
    document.documentElement.classList.remove('light', 'dark');
    
    // Adiciona classe dark apenas se o tema for dark
    if (newTheme === 'dark') {
      document.documentElement.classList.add('dark');
    }
    
    localStorage.setItem('theme', newTheme);
    updateThemeIcons();
    
    // Dispara um evento customizado para notificar outros componentes
    const event = new CustomEvent('theme-changed', { detail: { theme: newTheme } });
    document.dispatchEvent(event);
    
    // Debug
    console.log('Tema alterado para:', newTheme);
    console.log('Classes no HTML após toggle:', document.documentElement.classList.toString());
  }

  // Initialize theme icons
  updateThemeIcons();

  // Theme toggle event listener
  themeToggle?.addEventListener('click', toggleTheme);

  // Fecha o menu ao redimensionar a tela para desktop
  window.addEventListener('resize', () => {
    if (window.innerWidth >= 768) { // 768px é o breakpoint md do Tailwind
      closeMobileMenu();
    }
  });
</script>

<style>
  @keyframes slide-down {
    from {
      opacity: 0;
      transform: translateY(-20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .animate-slide-down {
    animation: slide-down 0.6s ease-out forwards;
  }
  
  /* Garantir que o backdrop-blur funcione */
  .backdrop-blur-xl {
    backdrop-filter: blur(24px) !important;
    -webkit-backdrop-filter: blur(24px) !important;
  }
  
  /* Animação para o menu mobile */
  #mobile-menu {
    opacity: 0;
    visibility: hidden;
    pointer-events: none;
    transition: opacity 0.4s ease, visibility 0.4s ease;
  }
  
  #mobile-menu.is-open {
    opacity: 1;
    visibility: visible;
    pointer-events: auto;
  }

  /* Animação para os itens do menu */
  #mobile-menu.is-open nav > ul > li {
    animation: slideInUp 0.5s ease-out forwards;
    opacity: 0; /* Começa invisível antes da animação */
  }

  /* Atraso escalonado para cada item da lista */
  #mobile-menu.is-open nav > ul > li:nth-child(1) { animation-delay: 0.1s; }
  #mobile-menu.is-open nav > ul > li:nth-child(2) { animation-delay: 0.2s; }
  #mobile-menu.is-open nav > ul > li:nth-child(3) { animation-delay: 0.3s; }
  #mobile-menu.is-open nav > ul > li:nth-child(4) { animation-delay: 0.4s; }
  #mobile-menu.is-open nav > ul > li:nth-child(5) { animation-delay: 0.5s; }

  @keyframes slideInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>
